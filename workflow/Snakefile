import os
import sys
import math
from snakemake.utils import min_version

min_version("6.6")

SDIR = os.path.realpath(os.path.dirname(srcdir("Snakefile")))
shell.prefix(f"set -eo pipefail;")

mask_config = {"samples": {"FastCN": config["fasta"]}}


wildcard_constraints:
    sample="FastCN",


module Rhodonite:
    snakefile:
        "https://github.com/mrvollger/Rhodonite/raw/master/workflow/Snakefile"
    config:
        mask_config


# import the rules from Rhodonite
use rule * from Rhodonite as Rhodonite_*


rule all:
    input:
        expand("results/{sample}.bin", sample="FastCN"),


rule mask_file:
    input:
        rm=rules.Rhodonite_RepeatMasker.output.bed,
        trf=rules.Rhodonite_trf.output.bed,
        gaps=rules.Rhodonite_gaps.output.bed,
        fai=f'{config["fasta"]}.fai',
    output:
        bed="results/{sample}.mask.bed",
    shell:
        """
        zcat -f -- {input.rm} {input.trf} {input.gaps} \
            | cut -f 1-3 \
            | bedtools sort -i - -g {input.fai} \
            | bedtools slop -i - -g {input.fai} -b 36 \
            | bedtools merge -i - \
        > {output.bed}
        """


rule exclude_file:
    input:
        sd=config["sd"],
        wm=rules.Rhodonite_windowmasker.output.bed,
        fai=f'{config["fasta"]}.fai',
    output:
        bed="results/{sample}.exclude.bed",
    params:
        window=400,
    shell:
        """
        cat \
            <(bedtools slop -b 32 -g {input.fai} -i {input.wm}) \
            <(bedtools slop -b {params.window} -g {input.fai} -i {input.sd}) \
            | cut -f 1-3 \
            | bedtools sort -i - -g {input.fai} \
            | bedtools merge -i - \
        > {output.bed}
        """


rule fastCN_GC_mask:
    input:
        mask=rules.mask_file.output.bed,
        exclude=rules.exclude_file.output.bed,
        fasta=config["fasta"],
        fai=f'{config["fasta"]}.fai',
    output:
        bin="results/{sample}.bin",
    log:
        "logs/{sample}.GC_mask.log",
    params:
        window=400,
    shell:
        """
        export PATH=$PWD/fastCN:$PATH
        GC_control_gen \
            {input.fasta} \
            {input.exclude} \
            {input.mask} \
            {params.window} \
            {output.bin} \
            > {log} 2>&1
        """
